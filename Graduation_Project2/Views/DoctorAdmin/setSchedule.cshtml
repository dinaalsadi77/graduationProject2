<!DOCTYPE html>
<html>
<head>
	<title>Schedule</title>

	<style>

		body {
			font-family: Arial, sans-serif;
			margin: 20px;
		}



		h1 {
			text-align: center;
		}



		form {
			max-width: 70%;
			margin: 0 auto;
		}



			form div {
				margin-bottom: 5px;
			}



		label {
			display: inline-block;
			padding: 5px;
		}



		input[type="datetime-local"],
		input[type="text"] {
			padding: 5px;
			border: 1px solid #ccc;
			border-radius: 4px;
			font-size: 14px;
			margin: auto 2px;
		}



		button {
			padding: 8px 16px;
			margin: 3px;
			background-color: #4CAF50;
			color: #fff;
			border: none;
			border-radius: 4px;
			cursor: pointer;
		}



			button:hover {
				background-color: #45a049;
			}



			button:active {
				background-color: #3d8e41;
			}

	</style>
	
	
</head>
<body>
	@model Graduation_Project2.Models.Schedule 

	@{
		int cont = 0;
	}
	<h1>@*@TempData["aaa"]
		@TempData["bbb"]*@
	</h1>
	<p class="error-message">@TempData["mass"]</p>
	<form asp-action="setSchedule">
		
		<label>Date:</label><br>
		<div id="bigContainer"> 
			<div id="date-time-container">
				<div>
					<input asp-for="Date" name="date" required>
					@*<input hidden name="schedules.ElementAt(@cont).state" value="false"/>*@
					@*@{
						cont++;
					}*@
				</div>
			</div>
		</div>
		@*<button type="button" onclick="addDateTime()" id="addTime">Add Date and Time</button><br>*@
		<button type="submit" id="addTime" name="btnSubmit" value="add">Add new Date and Time</button><br />
		<button type="submit" name="btnSubmit" value="save">Save Changes </button>
	
	</form>
	<script>/*
		var counter = 0;
		var divContainer;
		//var c=@cont;
		function addDateTime() {
			counter++;



			var dateTimeContainer = document.getElementById("date-time-container");

			var datetimeInput = document.createElement("input");
			datetimeInput.type = "datetime-local";
			datetimeInput.name = "Model.schedules.ElementAt("+ c +").Date";
			datetimeInput.required = true;

			var hideInput = document.createElement("input");
			hideInput.type = "hidden";
			hideInput.name = "schedules.ElementAt(" + c + ").state";
			c++;


			var dateTimeWrapper = document.createElement("div");
			dateTimeWrapper.appendChild(datetimeInput);
			dateTimeWrapper.appendChild(hideInput);

			if (counter == 32) {
				var btn = document.getElementById("addTime");
				btn.style.background = "#aaa"
				btn.style.color = "white";
				btn.disabled = true;
			}

			else if (counter % 8 == 0) {
				var bigContainer = document.getElementById("bigContainer");
				bigContainer.style.display = "flex";
				divContainer = document.createElement("div");
				divContainer.appendChild(dateTimeWrapper);
				divContainer.style.margin = "auto 2px;"
				bigContainer.appendChild(divContainer);
				//var child = dateTimeContainer.children ;
				//child[0].parentNode.insertBefore(divContainer,child[1]);

				//divContainer.appendChild(dateTimeWrapper);
			}
			else if (counter > 8) {
				divContainer.appendChild(dateTimeWrapper);
			}
			else
				dateTimeContainer.appendChild(dateTimeWrapper);
		}

		/*    function setSchedule() {
			  var datetimeInputs = document.getElementsByName("datetime-local");

			  var schedules = [];

			  for (var i = 0; i < datetimeInputs.length; i++) {
				var date = datetimeInputs[i].value;

				var schedule = {
				  date: date
				};

				schedules.push(schedule);
			  }

			  // Do something with the schedule information
			  console.log("Schedules: " + JSON.stringify(schedules));

			  // You can also perform further processing or send the data to a server using AJAX

			  // Clear the form inputs
			  document.getElementById("date-time-container").innerHTML = "";
			} */

	</script>
	
</body>
</html>